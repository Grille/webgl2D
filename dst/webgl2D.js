function webGL2DStart(r){var a={gl:null,shaderProgram:null,vertexPosition:[],vertexTextureCoord:[],vertexColor:[],vertexIndex:[],textureList:[],vertexPositionBuffer:null,vertexTextureCoordBuffer:null,vertexColorBuffer:null,vertexIndexBuffer:null,IndexOffset:0,bufferOffset:0,lastTexture:null,textureContinuous:[],textureOffset:0,useMatrixResult:new Float32Array(2E3),curOffset:0,textureCounter:0,translate:[0,0],scale:[1,1],angle:0,sin:0,cos:1,drawImageDst:new Int32Array(4),compileShader:function(b,f){var c=
  a.gl,e=c.createShader(c.FRAGMENT_SHADER),k=c.createShader(c.VERTEX_SHADER);c.shaderSource(k,b);c.compileShader(k);c.shaderSource(e,f);c.compileShader(e);var g=c.createProgram();c.attachShader(g,k);c.attachShader(g,e);c.linkProgram(g);c.getProgramParameter(g,c.LINK_STATUS)||alert("Could not initialise shaders");g.vertexPositionAttribute=c.getAttribLocation(g,"aVertexPosition");c.enableVertexAttribArray(g.vertexPositionAttribute);g.textureCoordAttribute=c.getAttribLocation(g,"aTextureCoord");c.enableVertexAttribArray(g.textureCoordAttribute);
  g.vertexColorAttribute=c.getAttribLocation(g,"aVertexColor");c.enableVertexAttribArray(g.vertexColorAttribute);g.samplerUniform=c.getUniformLocation(g,"uSampler");return g},useShader:function(b){l.useProgram(b);a.shaderProgram=b},pow:function(a){if(16>=a)return 16;if(32>=a)return 32;if(64>=a)return 64;if(128>=a)return 128;if(256>=a)return 256;if(512>=a)return 512;if(1024>=a)return 1024;if(2048>=a)return 2048;if(4096>=a)return 4096;if(8192>=a)return 8192},textureFromImage:function(b){var f=a.gl;var c=
  f.createTexture();var e=document.createElement("canvas"),k=e.getContext("2d");k.imageSmoothingEnabled=!1;k.mozImageSmoothingEnabled=!1;e.width=a.pow(b.width);e.height=a.pow(b.height);k.drawImage(b,0,0,b.width,b.height);f.bindTexture(f.TEXTURE_2D,c);f.texImage2D(f.TEXTURE_2D,0,f.RGBA,f.RGBA,f.UNSIGNED_BYTE,e);f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MAG_FILTER,f.NEAREST);f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MIN_FILTER,f.NEAREST);f.bindTexture(f.TEXTURE_2D,null);c.width=e.width;c.height=e.height;c.imgwidth=
  b.width;c.imgheight=b.height;c.index=a.textureCounter;a.textureCounter++;return c},textureFromFile:function(b){var f=a.gl;var c=f.createTexture();c.image=new Image;c.image.onload=function(){var b=document.createElement("canvas"),k=b.getContext("2d");k.imageSmoothingEnabled=!1;k.mozImageSmoothingEnabled=!1;b.width=a.pow(c.image.width);b.height=a.pow(c.image.height);k.drawImage(c.image,0,0,c.image.width,c.image.height);f.bindTexture(f.TEXTURE_2D,c);f.texImage2D(f.TEXTURE_2D,0,f.RGBA,f.RGBA,f.UNSIGNED_BYTE,
  b);f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MAG_FILTER,f.NEAREST);f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MIN_FILTER,f.NEAREST);f.bindTexture(f.TEXTURE_2D,null);c.width=b.width;c.height=b.height;c.imgwidth=c.image.width;c.imgheight=c.image.height;c.index=a.textureCounter;a.textureCounter++};c.image.src=b;return c},textureFromPixelArray:function(b,f,c){var e=a.gl,k=e.RGB,g=e.createTexture();e.bindTexture(e.TEXTURE_2D,g);e.texImage2D(e.TEXTURE_2D,0,k,f,c,0,k,e.UNSIGNED_BYTE,b);e.texParameteri(e.TEXTURE_2D,
  e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST);e.generateMipmap(e.TEXTURE_2D);e.bindTexture(e.TEXTURE_2D,null);g.width=f;g.height=c;g.imgwidth=f;g.imgheight=c;g.index=a.textureCounter;a.textureCounter++;return g},textureFromString:function(b,f,c){b=a.gl;f=b.createTexture();c=document.createElement("canvas");var e=c.getContext("2d");
  e.imageSmoothingEnabled=!1;e.mozImageSmoothingEnabled=!1;c.width=a.pow(512);c.height=a.pow(512);e.drawImage(image,0,0,image.width,image.height);b.bindTexture(b.TEXTURE_2D,f);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,c);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,null);f.width=c.width;f.height=c.height;f.imgwidth=image.width;f.imgheight=image.height;f.index=a.textureCounter;a.textureCounter++;
  return f},startScene:function(){a.gl.viewport(0,0,l.canvas.width,l.canvas.height);a.gl.clear(l.COLOR_BUFFER_BIT);a.IndexOffset=0;a.bufferOffset=0;a.lastTexture=null;a.textureOffset=-1},drawTriangle:function(b,f,c,e){var k=a.IndexOffset,g=a.bufferOffset;c=a.useMatrix(c);var m=b.width,p=b.height;var d=2*g;a.vertexPosition[d+0]=c[0];a.vertexPosition[d+1]=c[1];a.vertexPosition[d+2]=c[2];a.vertexPosition[d+3]=c[3];a.vertexPosition[d+4]=c[4];a.vertexPosition[d+5]=c[5];d=2*g;a.vertexTextureCoord[d+0]=f[0]/
  m;a.vertexTextureCoord[d+1]=f[1]/p;a.vertexTextureCoord[d+2]=f[2]/m;a.vertexTextureCoord[d+3]=f[3]/p;a.vertexTextureCoord[d+4]=f[4]/m;a.vertexTextureCoord[d+5]=f[5]/p;d=4*g;a.vertexColor[d+0]=e[0];a.vertexColor[d+1]=e[1];a.vertexColor[d+2]=e[2];a.vertexColor[d+3]=e[3];a.vertexColor[d+4]=e[4];a.vertexColor[d+5]=e[5];a.vertexColor[d+6]=e[6];a.vertexColor[d+7]=e[7];a.vertexColor[d+8]=e[8];a.vertexColor[d+9]=e[9];a.vertexColor[d+10]=e[10];a.vertexColor[d+11]=e[11];a.vertexIndex[3*k+0]=g+0;a.vertexIndex[3*
  k+1]=g+1;a.vertexIndex[3*k+2]=g+2;b!=a.lastTexture&&(a.textureOffset++,a.lastTexture=b,a.textureList[a.textureOffset]=b,a.textureContinuous[a.textureOffset]=0);a.textureContinuous[a.textureOffset]+=1;a.IndexOffset+=1;a.bufferOffset+=3},drawTriangleFan:function(b,f,c,e){var k=a.IndexOffset,g=a.bufferOffset,m=c.length/2;c=a.useMatrix(c);for(var p=b.width,d=b.height,h=2*g,l=2*g,q=4*g,n=0;n<m;n++)a.vertexPosition[h+0+2*n]=c[0+2*n],a.vertexPosition[h+1+2*n]=c[1+2*n],a.vertexTextureCoord[l+0+2*n]=f[0+2*
  n]/p,a.vertexTextureCoord[l+1+2*n]=f[1+2*n]/d,a.vertexColor[q+0+4*n]=e[0+4*n],a.vertexColor[q+1+4*n]=e[1+4*n],a.vertexColor[q+2+4*n]=e[2+4*n],a.vertexColor[q+3+4*n]=e[3+4*n];for(f=0;f<m-2;f++)a.vertexIndex[3*k+0+3*f]=g+0,a.vertexIndex[3*k+1+3*f]=g+1+f,a.vertexIndex[3*k+2+3*f]=g+2+f;b!=a.lastTexture&&(a.textureOffset++,a.lastTexture=b,a.textureList[a.textureOffset]=b,a.textureContinuous[a.textureOffset]=0);a.textureContinuous[a.textureOffset]+=m-2;a.IndexOffset+=m-2;a.bufferOffset+=m},drawSquare:function(b,
  f,c,e){var k=a.IndexOffset,g=a.bufferOffset;c=a.useMatrix(c);var m=b.width,l=b.height;var d=2*g;a.vertexPosition[d+0]=c[0];a.vertexPosition[d+1]=c[1];a.vertexPosition[d+2]=c[2];a.vertexPosition[d+3]=c[3];a.vertexPosition[d+4]=c[4];a.vertexPosition[d+5]=c[5];a.vertexPosition[d+6]=c[6];a.vertexPosition[d+7]=c[7];a.vertexPosition[d+8]=.25*(c[0]+c[2]+c[4]+c[6]);a.vertexPosition[d+9]=.25*(c[1]+c[3]+c[5]+c[7]);d=2*g;a.vertexTextureCoord[d+0]=f[0]/m;a.vertexTextureCoord[d+1]=f[1]/l;a.vertexTextureCoord[d+
  2]=f[2]/m;a.vertexTextureCoord[d+3]=f[3]/l;a.vertexTextureCoord[d+4]=f[4]/m;a.vertexTextureCoord[d+5]=f[5]/l;a.vertexTextureCoord[d+6]=f[6]/m;a.vertexTextureCoord[d+7]=f[7]/l;a.vertexTextureCoord[d+8]=.25*(a.vertexTextureCoord[d+0]+a.vertexTextureCoord[d+2]+a.vertexTextureCoord[d+4]+a.vertexTextureCoord[d+6]);a.vertexTextureCoord[d+9]=.25*(a.vertexTextureCoord[d+1]+a.vertexTextureCoord[d+3]+a.vertexTextureCoord[d+5]+a.vertexTextureCoord[d+7]);d=4*g;a.vertexColor[d+0]=e[0];a.vertexColor[d+1]=e[1];
  a.vertexColor[d+2]=e[2];a.vertexColor[d+3]=e[3];a.vertexColor[d+4]=e[4];a.vertexColor[d+5]=e[5];a.vertexColor[d+6]=e[6];a.vertexColor[d+7]=e[7];a.vertexColor[d+8]=e[8];a.vertexColor[d+9]=e[9];a.vertexColor[d+10]=e[10];a.vertexColor[d+11]=e[11];a.vertexColor[d+12]=e[12];a.vertexColor[d+13]=e[13];a.vertexColor[d+14]=e[14];a.vertexColor[d+15]=e[15];a.vertexColor[d+16]=.25*(e[0]+e[4]+e[8]+e[12]);a.vertexColor[d+17]=.25*(e[1]+e[5]+e[9]+e[13]);a.vertexColor[d+18]=.25*(e[2]+e[6]+e[10]+e[14]);a.vertexColor[d+
  19]=.25*(e[3]+e[7]+e[11]+e[15]);d=3*k;a.vertexIndex[d+0]=g+0;a.vertexIndex[d+1]=g+1;a.vertexIndex[d+2]=g+4;a.vertexIndex[d+3]=g+1;a.vertexIndex[d+4]=g+2;a.vertexIndex[d+5]=g+4;a.vertexIndex[d+6]=g+2;a.vertexIndex[d+7]=g+3;a.vertexIndex[d+8]=g+4;a.vertexIndex[d+9]=g+3;a.vertexIndex[d+10]=g+0;a.vertexIndex[d+11]=g+4;b!=a.lastTexture&&(a.textureOffset++,a.lastTexture=b,a.textureList[a.textureOffset]=b,a.textureContinuous[a.textureOffset]=0);a.textureContinuous[a.textureOffset]+=4;a.IndexOffset+=4;a.bufferOffset+=
  5},drawImage:function(b,f,c,e){var k=a.IndexOffset,g=a.bufferOffset,m=c[0],l=c[2]+c[0],d=c[1];c=c[3]+c[1];m=a.useMatrix([m,c,l,c,l,d,m,d]);d=b.width;var h=b.height;l=f[0]/d;d=(f[0]+f[2])/d;c=f[1]/h;f=(f[1]+f[3])/h;h=2*g;a.vertexPosition[h+0]=m[0];a.vertexPosition[h+1]=m[1];a.vertexPosition[h+2]=m[2];a.vertexPosition[h+3]=m[3];a.vertexPosition[h+4]=m[4];a.vertexPosition[h+5]=m[5];a.vertexPosition[h+6]=m[6];a.vertexPosition[h+7]=m[7];h=2*g;a.vertexTextureCoord[h+0]=l;a.vertexTextureCoord[h+1]=f;a.vertexTextureCoord[h+
  2]=d;a.vertexTextureCoord[h+3]=f;a.vertexTextureCoord[h+4]=d;a.vertexTextureCoord[h+5]=c;a.vertexTextureCoord[h+6]=l;a.vertexTextureCoord[h+7]=c;h=4*g;a.vertexColor[h+0]=a.vertexColor[h+4]=a.vertexColor[h+8]=a.vertexColor[h+12]=e[0];a.vertexColor[h+1]=a.vertexColor[h+5]=a.vertexColor[h+9]=a.vertexColor[h+13]=e[1];a.vertexColor[h+2]=a.vertexColor[h+6]=a.vertexColor[h+10]=a.vertexColor[h+14]=e[2];a.vertexColor[h+3]=a.vertexColor[h+7]=a.vertexColor[h+11]=a.vertexColor[h+15]=e[3];h=3*k;a.vertexIndex[h+
  0]=g+0;a.vertexIndex[h+1]=g+1;a.vertexIndex[h+2]=g+2;a.vertexIndex[h+3]=g+0;a.vertexIndex[h+4]=g+2;a.vertexIndex[h+5]=g+3;b!=a.lastTexture&&(a.textureOffset++,a.lastTexture=b,a.textureList[a.textureOffset]=b,a.textureContinuous[a.textureOffset]=0);a.textureContinuous[a.textureOffset]+=2;a.IndexOffset+=2;a.bufferOffset+=4},endScene:function(){var b=a.gl;b.bindBuffer(b.ARRAY_BUFFER,a.vertexPositionBuffer);b.bufferData(b.ARRAY_BUFFER,a.vertexPosition,b.DYNAMIC_DRAW);b.vertexAttribPointer(a.shaderProgram.vertexPositionAttribute,
  2,b.FLOAT,!1,0,0);b.bindBuffer(b.ARRAY_BUFFER,a.vertexColorBuffer);b.bufferData(b.ARRAY_BUFFER,a.vertexColor,b.DYNAMIC_DRAW);b.vertexAttribPointer(a.shaderProgram.vertexColorAttribute,4,b.FLOAT,!1,0,0);b.bindBuffer(b.ARRAY_BUFFER,a.vertexTextureCoordBuffer);b.bufferData(b.ARRAY_BUFFER,a.vertexTextureCoord,b.DYNAMIC_DRAW);b.vertexAttribPointer(a.shaderProgram.textureCoordAttribute,2,b.FLOAT,!1,0,0);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,a.vertexIndexBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,a.vertexIndex,
  b.DYNAMIC_DRAW)},renderScene:function(){for(var b=a.gl,f=0,c=0,e;f<=a.textureOffset;)e=a.textureContinuous[f],b.activeTexture(b.TEXTURE0),b.bindTexture(b.TEXTURE_2D,a.textureList[f]),b.drawElements(b.TRIANGLES,3*e,b.UNSIGNED_SHORT,6*c),c+=e,f++},useMatrix:function(b){var f=a.gl,c=a.translate,e=a.scale,k=a.sin,g=a.cos,l=.5*f.viewportWidth;f=.5*f.viewportHeight;var p=b.length;if(!1===!(0===k&&1===g))for(k=0;k<p;k+=2)a.useMatrixResult[k+0]=-1+(b[k]+c[0])*e[0]/l,a.useMatrixResult[k+1]=1-(b[k+1]+c[1])*
  e[1]/f;else for(var d=0;d<p;d+=2)a.useMatrixResult[d+0]=-1+(b[d]*e[0]*g-b[d+1]*e[1]*k+c[0])/l,a.useMatrixResult[d+1]=1-(b[d+1]*e[1]*g+b[d]*e[0]*k+c[1])/f;return a.useMatrixResult},matrix:{setTranslate:function(b,f){a.translate=[b,f]},addTranslate:function(b,f){a.translate[0]+=b;a.translate[1]+=f},setScale:function(b,f){a.scale=[b,f]},addScale:function(b,f){a.scale[0]+=b;a.scale[1]+=f},setRotate:function(b){a.angle=b;a.sin=Math.sin(3.14159265*a.angle/180);a.cos=Math.cos(3.14159265*a.angle/180)},addRotate:function(b){a.angle+=
  b;a.sin=Math.sin(3.14159265*a.angle/180);a.cos=Math.cos(3.14159265*a.angle/180)},reset:function(){a.translate=[0,0];a.scale=[1,1];a.angle=0;a.sin=Math.sin(3.14159265*a.angle/180);a.cos=Math.cos(3.14159265*a.angle/180)},save:function(){return[a.translate,a.scale,a.angle]},load:function(b){a.translate=b[0];a.scale=b[1];a.angle=b[2];a.sin=Math.sin(3.14159265*a.angle/180);a.cos=Math.cos(3.14159265*a.angle/180)}}};a.gl=r.getContext("webgl",{antialias:!1,depth:!1});var l=a.gl;a.vertexPositionBuffer=l.createBuffer();
  a.vertexColorBuffer=l.createBuffer();a.vertexTextureCoordBuffer=l.createBuffer();a.vertexIndexBuffer=l.createBuffer();l.viewportWidth=r.width;l.viewportHeight=r.height;a.vertexPosition=new Float32Array(8E4);a.vertexTextureCoord=new Float32Array(8E4);a.vertexColor=new Float32Array(16E4);a.vertexIndex=new Uint16Array(6E4);a.textureList=[];a.textureContinuous=[];a.useShader(a.compileShader("\n      attribute vec2 aVertexPosition;\n      attribute vec2 aTextureCoord;\n      attribute vec4 aVertexColor;\n\n      varying vec2 vTextureCoord;\n      varying vec4 vColor;\n\n      void main(void) {\n          gl_Position = vec4(aVertexPosition.x, aVertexPosition.y, 0.0, 1.0);\n          vTextureCoord = aTextureCoord;\n          vColor = aVertexColor / vec4(255,255,255,255);\n      }\n      ",
  "\n      precision mediump float;\n\n      varying vec2 vTextureCoord;\n      varying vec4 vColor;\n\n      uniform sampler2D uSampler;\n\n      void main(void) {\n        gl_FragColor = vec4(texture2D(uSampler, vTextureCoord) * vColor);\n      }\n      "));l.disable(l.DEPTH_TEST);l.blendFunc(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA);l.enable(l.BLEND);a.nullTexture=a.textureFromPixelArray(new Uint8Array([255,255,255]),1,1);return a};